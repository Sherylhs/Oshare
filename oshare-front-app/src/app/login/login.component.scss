.container {
    position: relative;
    margin-top: 10%;
}

.form-control {
    background-color: #FFFAFA;
    font-family: 'Roboto', sans-serif;
    color: #333;
    font-size: 20px;
    padding: 1.5rem 2rem;
    border-radius: 0.2rem;
    border: none;
    display: block;
    border-bottom: 0.3rem solid transparent;
    transition: all 0.3s;
    width: 70%;
}

.button-login {
    position: relative;
    display: block;
    width: 200px;
    height: 36px;
    border-radius: 18px;
    background-color: #949390;
    border: solid 1px transparent;
    color: #fff;
    font-size: 18px;
    font-weight: 300;
    cursor: pointer;
    transition: all .1s ease-in-out;
}

.label-text {
    font-size: 20px;
}

.button-regis {
    font-size: 15px;
}

body {
    margin: 0;
    overflow: hidden;
}

.background {
    width: 100vw;
    height: 30vh;
    background: white;
}

.h1{
    background-position: center;
}

$particleSize: 20vmin;
$animationDuration: 6s;
$amount: 20;
.background .ball {
    width: $particleSize;
    height: $particleSize;
    border-radius: $particleSize;
    backface-visibility: hidden;
    position: absolute;
    animation-name: move;
    animation-duration: $animationDuration;
    animation-timing-function: linear;
    animation-iteration-count: infinite;
    $colors: ( #583C87, #E45A84, #FFACAC);
    @for $i from 1 through $amount {
        &:nth-child(#{$i}) {
            color: nth($colors, random(length($colors)));
            top: random(100) * 1%;
            left: random(100) * 1%;
            animation-duration: (random($animationDuration * 10) / 10) * 1s + 10s;
            animation-delay: random(($animationDuration + 10s) * 10) / 10 * -1s;
            transform-origin: (random(50) - 25) * 1vw (random(50) - 25) * 1vh;
            $blurRadius: (random() + 0.5) * $particleSize * 0.5;
            $x: if(random() > 0.5, -1, 1);
            box-shadow: ($particleSize * 2 * $x) 0 $blurRadius currentColor;
        }
    }
}

@keyframes move {
    100% {
        transform: translate3d(0, 0, 1px) rotate(360deg);
    }
}